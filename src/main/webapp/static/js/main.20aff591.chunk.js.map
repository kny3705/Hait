{"version":3,"sources":["logo.svg","comp-home/Header.jsx","comp-home/Index.jsx","utils/ajax.js","utils/api.js","utils/form.jsx","comp-home/ApplicationForm.jsx","comp-home/Application.jsx","comp-home/Result.jsx","Home.jsx","context/asideContext.jsx","context/rstrntContext.jsx","utils/const.js","comp-owner/Clock.jsx","comp-owner/StateLabel.jsx","comp-owner/Header.jsx","comp-owner/Aside.jsx","context/reservContext.jsx","comp-owner/ReservItem.jsx","comp-owner/BtnContainer.jsx","comp-owner/Dashboard.jsx","comp-owner/Setting.jsx","comp-owner/Main.jsx","comp-owner/LoginForm.jsx","comp-owner/Login.jsx","comp-owner/InitialSetting.jsx","utils/preview.js","Owner.jsx","comp-customer/Rstrnt.jsx","comp-customer/Reserv.jsx","comp-customer/ReservResult.jsx","comp-customer/RstrntDetail.jsx","comp-customer/Main.jsx","Customer.jsx","comp-admin/Login.jsx","comp-admin/Header.jsx","comp-admin/ApplicationItem.jsx","comp-admin/ApplicationList.jsx","comp-admin/ApplicationDetail.jsx","Admin.jsx","App.js","index.js"],"names":["Header","path","useRouteMatch","id","className","to","src","logo","alt","Index","_fetch","url","method","data","info","fetch","then","res","json","init","FormData","body","headers","JSON","stringify","commonAPI","cb","useCities","useState","value","setValue","useEffect","status","adminAPI","ownerAPI","applicationAPI","filter","pk","reservAPI","rstrntAPI","nm","city_pk","state","useInput","onChange","useCallback","e","target","usePasswordInput","input","type","placeholder","useEmailInput","pattern","ApplicationForm","setErrMessage","history","useHistory","cities","rstrnt_nm","owner_nm","owner_contact","useTelInput","owner_email","more_info","onSubmit","preventDefault","message","push","required","maxLength","map","Application","errMessage","Result","Home","exact","component","asideContext","createContext","asideInit","locked","show","asideReducer","action","rstrntContext","rstrntReducer","profile_img","APPLICATION_STATUS_CODE","CANCELED","REQUESTED","CONFIRMED","RESERV_STATUS_CODE","RSTRNT_STATE_CODE","CLOSE","BREAK","OPEN","days","format","now","hh","getHours","mm","getMinutes","getFullYear","getMonth","getDate","getDay","Clock","memo","interval","Date","time","setTime","updateTime","setInterval","clearInterval","StateLabel","useContext","rstrnt","rstrntDispatch","stateHandle","window","confirm","onClick","asideDispatch","onMouseEnter","onMouseLeave","Aside","aside","useMemo","handleLogout","replace","alert","reservContext","reservInit","list","detail","realtime_total","reservReducer","unshift","splice","index","waittime","ReservItem","setWaittime","reservDispatch","detailHandle","called","process_status","seq","headcount","count","regdate","wait","getTime","parseInt","BtnContainer","reserv","dropdownMenu","useRef","handleStatus","contact","find","item","indexOf","length","current","classList","toggle","ref","Dashboard","useReducer","Provider","Setting","RstrntInfo","OwnerInfo","fileHandle","formData","append","files","moreInfoSubmit","name","accept","htmlFor","location","encType","ownerInfo","useOwner","email","Main","Close","LoginForm","pw","Login","InitialSetting","container","setData","file","reset_pw","formFields","setFormFields","owner_pk","fieldHandle","img","querySelector","document","createElement","appendChild","constructor","File","URL","createObjectURL","setPreview","Owner","List","setPagename","pagenameContext","setList","search","setSearch","handleChange","Item","Reserv","useParams","setFormData","inputHandle","rstrnt_pk","Detail","pagename","Customer","ApplicationItem","city_nm","ApplicationList","setFilter","useApplicationList","ApplicationDetail","application","useApplication","dataset","code","reload","data-code","Admin","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.20aff591.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.46dfba2d.svg\";","import { useRouteMatch } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport logo from \"../logo.svg\"\r\n\r\nexport default function Header() {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <header id=\"header\" className=\"flex-row\">\r\n      <h1 className=\"logo\">\r\n        <Link to=\"\">\r\n          <img src={logo} alt=\"h.ait logo\" />\r\n        </Link>\r\n      </h1>\r\n      <nav className=\"gnb\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/home\">홈</Link>\r\n          </li>\r\n          <li>\r\n            <Link className=\"btn btn-round\" to={`${path}/application`}>사용 신청</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nexport default function Index() {\r\n  return (\r\n    <section className=\"content content-index\">\r\n      <Link className=\"btn btn-round\" to=\"/owner\">사장님으로 시작하기</Link>\r\n      <Link className=\"btn btn-round\" to=\"/customer\">손님으로 시작하기</Link>\r\n    </section>\r\n  )\r\n}","export function _fetch(url, method, data) {\r\n  const info = `/api/${url}`\r\n  if(!method || !data) {\r\n    return fetch(info).then(res => res.json())\r\n  }\r\n\r\n  let init = { method: method }\r\n  if(data instanceof FormData) {\r\n    init = {\r\n      ...init,\r\n      body: data\r\n    }\r\n  } else {\r\n    init = {\r\n      ...init,\r\n      headers: { 'content-type': 'application/json'},\r\n      body: JSON.stringify(data)\r\n    }\r\n  }\r\n\r\n  return fetch(info, init).then(res => res.json())\r\n}\r\n\r\nexport const method = {\r\n  GET: 'get',\r\n  POST: 'post',\r\n  PUT: 'put',\r\n  DELETE: 'delete'\r\n}","import { useEffect, useState } from 'react'\r\nimport { method, _fetch } from './ajax'\r\n\r\nexport const commonAPI = {\r\n  getCities: (cb) => {\r\n    _fetch('cities')\r\n      .then(body => cb(body))\r\n  }\r\n}\r\n\r\nexport function useCities() {\r\n  const [value, setValue] = useState([])\r\n\r\n  useEffect(() => {\r\n    commonAPI.getCities(({ status, data }) => {\r\n      switch(status) {\r\n        case 200:\r\n          return setValue(data)\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return value\r\n}\r\n\r\nexport const adminAPI = {\r\n  login: (data, cb) => {\r\n    _fetch(`admin/login`, method.POST, data)\r\n      .then(body => cb(body))\r\n  },\r\n  logout: (cb) => {\r\n    _fetch(`admin/logout`)\r\n      .then(body => cb(body))\r\n  }\r\n}\r\n\r\nexport const ownerAPI = {\r\n  login: (data, cb) => {\r\n    _fetch('owner/login', method.POST, data)\r\n      .then(body => cb(body))\r\n  },\r\n  logout: (cb) => {\r\n    _fetch('owner/logout')\r\n      .then((body) => cb(body))\r\n  },\r\n  getOwner: (cb) => {\r\n    _fetch('owner')\r\n      .then(body => cb(body))\r\n  },\r\n}\r\n\r\nexport const applicationAPI = {\r\n  apply: (data, cb) => {\r\n    _fetch(`application`, method.POST, data)\r\n      .then(body => cb(body))\r\n  },\r\n  getList: (filter, cb) => {\r\n    _fetch(`applications?process_status=${filter}`)\r\n      .then(body => cb(body))\r\n  },\r\n  getApplication: (pk, cb) => {\r\n    _fetch(`applications/${pk}`)\r\n      .then(body => cb(body))\r\n  },\r\n  updateApplication: (data, cb) => {\r\n    _fetch(`applications`, method.PUT, data)\r\n      .then(body => cb(body))\r\n  }\r\n}\r\n\r\nexport const reservAPI = {\r\n  getList: (cb) => {\r\n    _fetch(`reservations`)\r\n      .then(body => cb(body))\r\n  },\r\n  getReservList: (cb) => {\r\n    _fetch('reservations')\r\n      .then(body => cb(body))\r\n  },\r\n  updReservStatus: (data, cb) => {\r\n    _fetch('reservations', method.PUT, data)\r\n      .then(body => cb(body))\r\n  },\r\n  reservation: (data, cb) => {\r\n    _fetch('reservation', method.POST, data)\r\n      .then(body => cb(body))\r\n  },\r\n  getResult: (pk, cb) => {\r\n    _fetch(`reservation/${pk}`)\r\n      .then(body => cb(body))\r\n  }\r\n}\r\n\r\nexport const rstrntAPI = {\r\n  getRstrntAll: (data = {}, cb) => {\r\n    _fetch(`restaurants?nm=${data.nm || ''}&city_pk=${data.city_pk || ''}`)\r\n      .then(body => cb(body))\r\n  },\r\n  getRstrnt: (pk, cb) => {\r\n    _fetch(`restaurants/${pk}`)\r\n      .then(body => cb(body))\r\n  },\r\n  getRstrntInfo: (cb) => {\r\n    _fetch(`restaurant`)\r\n      .then(body => cb(body))\r\n  },\r\n  updRstrnt: (data, cb) => {\r\n    _fetch('restaurant', method.PUT, data)\r\n      .then(body => cb(body))\r\n  },\r\n  getInitialInfo: (cb) => {\r\n    _fetch('restaurant/initial')\r\n      .then(body => cb(body))\r\n  },\r\n  initialSetting: (data, cb) => {\r\n    _fetch('restaurant/initial', method.PUT, data)\r\n      .then(body => cb(body))\r\n  },\r\n  changeRstrntState: (state, cb) => {\r\n    _fetch('restaurant/state', method.PUT, { state: state })\r\n      .then(body => cb(body))\r\n  },\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport function useInput() {\r\n  const [value, setValue] = useState('')\r\n\r\n  const handleChange = useCallback((e) => {\r\n    setValue(e.target.value)\r\n  })\r\n\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n\r\nexport function usePasswordInput() {\r\n  const input = useInput()\r\n\r\n  return {\r\n    ...input,\r\n    type: 'password',\r\n    placeholder: '비밀번호'\r\n  }\r\n}\r\n\r\nexport function useTelInput() {\r\n  const input = useInput()\r\n  \r\n  return {\r\n    ...input,\r\n    type: 'tel',\r\n    placeholder: '전화번호',\r\n  }\r\n}\r\n\r\nexport function useCheckbox() {\r\n  const input = useInput(null)\r\n\r\n  return {\r\n    ...input,\r\n    type: 'checkbox',\r\n  }\r\n}\r\n\r\nexport function useEmailInput() {\r\n  const input = useInput()\r\n\r\n  return {\r\n    ...input,\r\n    type: 'email',\r\n    pattern: '^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$',\r\n    placeholder: '이메일'\r\n  }\r\n}","import { useHistory } from \"react-router\"\r\n\r\nimport { applicationAPI, useCities } from \"../utils/api\"\r\nimport { useEmailInput, useInput, useTelInput } from \"../utils/form\"\r\n\r\nexport default function ApplicationForm({ setErrMessage }) {\r\n\r\n  const history = useHistory()\r\n  const cities = useCities()\r\n\r\n  const rstrnt_nm = useInput()\r\n  const owner_nm = useInput()\r\n  const owner_contact = useTelInput()\r\n  const owner_email = useEmailInput()\r\n  const city_pk = useInput()\r\n  const more_info = useInput()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      rstrnt_nm: rstrnt_nm.value,\r\n      owner_nm: owner_nm.value,\r\n      owner_contact: owner_contact.value,\r\n      owner_email: owner_email.value,\r\n      city_pk: city_pk.value,\r\n      more_info: more_info.value,\r\n    }\r\n\r\n    applicationAPI.apply(data, ({ status, message }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return history.push('/home/result')\r\n        default:\r\n          return setErrMessage(message)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        {...rstrnt_nm}\r\n        required\r\n        maxLength=\"50\"\r\n        placeholder=\"매장명 (상호명)\"\r\n      />\r\n      <input\r\n        {...owner_nm}\r\n        required\r\n        maxLength=\"50\"\r\n        placeholder=\"신청인 이름\"\r\n      />\r\n      <input\r\n        {...owner_email}\r\n        required\r\n        maxLength=\"100\"\r\n        placeholder=\"신청인 이메일\"\r\n      />\r\n      <input\r\n        {...owner_contact}\r\n        required\r\n        maxLength=\"20\"\r\n        placeholder=\"신청인 연락처\"\r\n      />\r\n      <select {...city_pk} required>\r\n        <option value=\"\">시</option>\r\n        {\r\n          cities.map(({ nm, pk }) => (\r\n            <option key={pk} value={pk}>{nm}</option>\r\n          ))\r\n        }\r\n      </select>\r\n      <textarea\r\n        {...more_info}\r\n        placeholder=\"기타 요청사항\"\r\n      />\r\n      <button className=\"btn\">승인신청</button>\r\n    </form>\r\n  )\r\n}","import { useState } from \"react\"\r\n\r\nimport ApplicationForm from \"./ApplicationForm\"\r\n\r\nexport default function Application() {\r\n\r\n  const [errMessage, setErrMessage] = useState('')\r\n\r\n  return (\r\n    <section className=\"content content-application flex-column\">\r\n      <h2 className=\"content-title\">서비스 사용 신청서</h2>\r\n      <p className=\"err-message\">{errMessage}</p>\r\n      <ApplicationForm setErrMessage={setErrMessage} />\r\n    </section>\r\n  )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Result() {\r\n  return (\r\n    <section className=\"content content-result flex-column\">\r\n      <h2 className=\"content-title\">신청 완료</h2>\r\n\r\n      <p>승인 신청이 완료되었습니다. 승인 검토는 최대 3일 소요 됩니다.</p>\r\n      <p>신청 결과는 이메일로 발송됩니다.</p>\r\n\r\n      <p className=\"small-link\">\r\n        H.ait가 처음이신가요? <Link to=\"/\">H.ait 둘러보기</Link>\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import { Route, Switch, useRouteMatch } from \"react-router-dom\"\r\n\r\nimport Header from \"./comp-home/Header\"\r\nimport Index from \"./comp-home/Index\"\r\nimport Application from \"./comp-home/Application\"\r\nimport Result from \"./comp-home/Result\"\r\n\r\nexport default function Home() {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <div id=\"home-app\" className=\"flex-column\">\r\n      <Header />\r\n      <main id=\"main\">\r\n        <Switch>\r\n          <Route exact path={path} component={Index} />\r\n          <Route exact path={`${path}/application`} component={Application} />\r\n          <Route exact path={`${path}/result`} component={Result} />\r\n          <Route>\r\n            Page not found\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  )\r\n}","import { createContext, useReducer } from \"react\"\r\n\r\nexport const asideContext = createContext({})\r\n\r\nconst asideInit = {\r\n  locked: false,\r\n  show: false\r\n}\r\n\r\nfunction asideReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ON_CLICK':\r\n      return { ...state, locked: !state.locked }\r\n    case 'ON_MOUSEENTER':\r\n      return { ...state, show: true }\r\n    case 'ON_MOUSELEAVE':\r\n      return { ...state, show: false }\r\n    default:\r\n      return\r\n  }\r\n}\r\n\r\nexport function useAsideReducer() {\r\n  return useReducer(asideReducer, asideInit)\r\n}","import { createContext, useReducer } from \"react\"\r\n\r\nexport const rstrntContext = createContext({})\r\n\r\nfunction rstrntReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_DATA':\r\n      return action.data\r\n    case 'SET_MORE_INFO':\r\n      return { ...state, more_info: action.data }\r\n    case 'SET_PROFILE_IMG':\r\n      return { ...state, profile_img: action.data }\r\n    case 'UPDATE_STATE':\r\n      return {...state, state: action.state}\r\n    default:\r\n      return\r\n  }\r\n}\r\n\r\nexport function useRstrntReducer() {\r\n  return useReducer(rstrntReducer, {})\r\n}","export const APPLICATION_STATUS_CODE = {\r\n  '-1': 'canceled',\r\n  '0': 'requested',\r\n  '1': 'confirmed',\r\n  CANCELED: '-1',\r\n  REQUESTED: '0',\r\n  CONFIRMED: '1'\r\n}\r\n\r\nexport const RESERV_STATUS_CODE = {\r\n  CALCELED_SOLDOUT: -3,\r\n  CANCELED_RSTRNT: -2,\r\n  CANCELED_CUSTOMER: -1,\r\n  RESERVED: 0,\r\n  CALLED: 1,\r\n  CONFIRMED: 2\r\n}\r\n\r\nexport const RSTRNT_STATE_CODE = {\r\n  '-1': 'close',\r\n  '0': 'break',\r\n  '1': 'open',\r\n  CLOSE: '-1',\r\n  BREAK: '0',\r\n  OPEN: '1'\r\n}","import { memo, useState, useEffect } from \"react\"\r\n\r\nconst days = ['일', '월', '화', '수', '목', '금', '토']\r\n\r\nfunction format(now) {\r\n  const hh = now.getHours()\r\n  const mm = now.getMinutes()\r\n  return (\r\n    `\r\n    ${now.getFullYear()}년\r\n    ${now.getMonth()}월\r\n    ${now.getDate()}일\r\n    ${days[now.getDay()]}요일 |\r\n    ${hh > 9 ? hh : `0${hh}`} :\r\n    ${mm > 9 ? mm : `0${mm}`} \r\n    `\r\n  )\r\n}\r\n\r\nconst Clock = memo(() => {\r\n  const [time, setTime] = useState(new Date())\r\n\r\n  const updateTime = () => { setTime(new Date()) }\r\n\r\n  let interval\r\n\r\n  useEffect(() => {\r\n    interval = setInterval(updateTime, 1000)\r\n    return () => { clearInterval(interval) }\r\n  })\r\n\r\n  return (\r\n    <div id=\"datetime\">{format(time)}</div>\r\n  )\r\n})\r\n\r\nexport default Clock","import { memo, useCallback, useContext } from \"react\"\r\n\r\nimport { rstrntAPI } from \"../utils/api\"\r\nimport { RSTRNT_STATE_CODE } from \"../utils/const\"\r\n\r\nimport { rstrntContext } from \"../context/rstrntContext\"\r\n\r\nconst StateLabel = memo(({ state }) => {\r\n\r\n  const { rstrnt, rstrntDispatch } = useContext(rstrntContext)\r\n\r\n  const stateHandle = useCallback(() => {\r\n    if (state === rstrnt.state) return\r\n    if (state === RSTRNT_STATE_CODE.CLOSE) {\r\n      if (!window.confirm('남은 예약 건을 일괄 취소하겠습니까?')) return\r\n    }\r\n\r\n    rstrntAPI.changeRstrntState(state, ({ status }) => {\r\n      if (status === 200) {\r\n        return rstrntDispatch({ type: 'UPDATE_STATE', state: state })\r\n      }\r\n    })\r\n  }, [rstrnt.state])\r\n\r\n  return (\r\n    <button onClick={stateHandle} className={`state-label ${RSTRNT_STATE_CODE[state]}`}>\r\n      <span>{RSTRNT_STATE_CODE[state]}</span>\r\n    </button>\r\n  )\r\n})\r\n\r\nexport default StateLabel","import { useContext } from \"react\"\r\n\r\nimport { RSTRNT_STATE_CODE } from \"../utils/const\"\r\n\r\nimport { asideContext } from \"../context/asideContext\"\r\nimport { rstrntContext } from \"../context/rstrntContext\"\r\n\r\nimport Clock from \"./Clock\"\r\nimport StateLabel from \"./StateLabel\"\r\n\r\nexport default function Header() {\r\n\r\n  const { asideDispatch } = useContext(asideContext)\r\n  const { rstrnt } = useContext(rstrntContext)\r\n\r\n  return (\r\n    <header id=\"header\" className=\"flex-row\">\r\n      <div>\r\n        <button\r\n          className=\"aside-btn\"\r\n          onClick={() => asideDispatch({ type: 'ON_CLICK' })}\r\n          onMouseEnter={() => asideDispatch({ type: 'ON_MOUSEENTER' })}\r\n          onMouseLeave={() => asideDispatch({ type: 'ON_MOUSELEAVE' })}\r\n        >\r\n          =\r\n        </button>\r\n        <div className=\"state-btn-container\">\r\n          <StateLabel state={rstrnt.state} />\r\n          <ul className=\"state-btn-dropdown\">\r\n            <li><StateLabel state={RSTRNT_STATE_CODE.CLOSE} /></li>\r\n            <li><StateLabel state={RSTRNT_STATE_CODE.OPEN} /></li>\r\n            <li><StateLabel state={RSTRNT_STATE_CODE.BREAK} /></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Clock/>\r\n    </header>\r\n  )\r\n}","import { useCallback, useContext, useMemo } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { ownerAPI } from \"../utils/api\"\r\n\r\nimport { asideContext } from \"../context/asideContext\"\r\nimport { rstrntContext } from \"../context/rstrntContext\"\r\n\r\nexport default function Aside() {\r\n\r\n  const history = useHistory()\r\n  const { aside } = useContext(asideContext)\r\n  const { rstrnt } = useContext(rstrntContext)\r\n\r\n  const locked = useMemo(() => (\r\n    aside.locked ? 'locked' : ''\r\n  ), [aside.locked])\r\n\r\n  const show = useMemo(() => (\r\n    aside.show ? 'show' : ''\r\n  ), [aside.show])\r\n\r\n  const handleLogout = useCallback(() => {\r\n    ownerAPI.logout(({ status, message }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return history.replace(\"/owner/login\")\r\n        case 400:\r\n          return alert(`[${message}] 예약이 남아있는 상태에서는 로그아웃이 불가합니다.`)\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <aside className={`aside card ${locked} ${show}`}>\r\n      <header className=\"aside-header\">\r\n        <h1>H.ait - <small>{rstrnt.nm}</small></h1>\r\n        <div className=\"card card-circle\">\r\n          <img src={`/resources/img/rstrnt/${rstrnt.pk}/${rstrnt.profile_img}`} alt=\"profile image\" />\r\n        </div>\r\n      </header>\r\n      <nav>\r\n        <ul className=\"gnb\">\r\n          <li><Link to=\"/owner/main\">Dashboard</Link></li>\r\n          <li><Link to=\"/owner/main/setting\">Info & Setting</Link></li>\r\n          <li className=\"logout-link\" onClick={handleLogout}>Logout</li>\r\n          <li className=\"small_link\"><Link to=\"\">Go to H.ait service page</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  )\r\n}","import { createContext, useReducer } from \"react\"\r\n\r\nexport const reservContext = createContext({})\r\n\r\nconst reservInit = {\r\n  list: [],\r\n  detail: null,\r\n  realtime_total: 0\r\n}\r\n\r\nfunction reservReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.data\r\n      }\r\n    case 'SET_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.data\r\n      }\r\n    case 'SET_TOTAL':\r\n      return {\r\n        ...state,\r\n        realtime_total: action.data\r\n      }\r\n    case 'UNSHIFT_ITEM':\r\n      state.list.unshift(action.data)\r\n      return {\r\n        ...state\r\n      }\r\n    case 'SPLICE_ITEM':\r\n      state.list.splice(action.index, 1)\r\n      return {...state}\r\n    case 'UPDATE_WAIT_TIME':\r\n      return {\r\n        ...state,\r\n        detail: {\r\n          ...state.detail,\r\n          waittime: action.data\r\n        }\r\n      }\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\n\r\nexport function useReservReducer() {\r\n  return useReducer(reservReducer, reservInit)\r\n}","import { memo, useCallback, useContext, useEffect, useMemo, useState } from \"react\"\r\n\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\nimport { reservContext } from \"../context/reservContext\"\r\n\r\nconst ReservItem = memo(({ data }) => {\r\n  const [waittime, setWaittime] = useState('')\r\n  const { reservDispatch } = useContext(reservContext)\r\n\r\n  const detailHandle = useCallback(() => {\r\n    reservDispatch({ type: 'SET_DETAIL', data: data })\r\n    reservDispatch({ type: 'UPDATE_WAIT_TIME', data: waittime })\r\n  })\r\n\r\n  const called = useMemo(() => data.process_status === 1 ? 'called' : '', [data.process_status])\r\n  const seq = useMemo(() => data.seq < 10 ? `0${data.seq}` : data.seq, [data.seq])\r\n  const headcount = useMemo(() => data.headcount < 10 ? `0${data.headcount}` : data.headcount, [data.headcount])\r\n\r\n  const count = useCallback(() => {\r\n    const regdate = new Date(data.regdate)\r\n    const wait = (Date.now() - regdate.getTime()) / 1000\r\n    setWaittime(parseInt(wait / 60))\r\n  }, [data.regdate])\r\n\r\n  useEffect(() => {\r\n    count()\r\n    setInterval(() => count(), 1000)\r\n  }, [data.regdate])\r\n\r\n  return (\r\n    <div className={`list-item card ${called}`} onClick={detailHandle}>\r\n      <strong className=\"reserv-no\">#{seq}</strong>\r\n      <div>\r\n        <p className=\"reserv-headcount\">{headcount} 명</p>\r\n        <p className=\"reserv-waittime\"><AccessAlarmIcon />{waittime} 분</p>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport default ReservItem","import { memo, useContext, useRef } from \"react\"\r\n\r\nimport { reservAPI } from \"../utils/api\"\r\nimport { RESERV_STATUS_CODE } from \"../utils/const\"\r\n\r\nimport { reservContext } from \"../context/reservContext\"\r\nimport { rstrntContext } from \"../context/rstrntContext\"\r\n\r\nconst BtnContainer = memo(() => {\r\n  const { rstrnt } = useContext(rstrntContext)\r\n  const { reserv, reservDispatch } = useContext(reservContext)\r\n  const { detail, list } = reserv\r\n\r\n  const dropdownMenu = useRef(null)\r\n\r\n  const handleCancelMenu = () => {\r\n    dropdownMenu.current.classList.toggle('show')\r\n  }\r\n\r\n  const handleStatus = (process_status) => {\r\n    if (!detail) return\r\n    if (detail.process_status === process_status) return\r\n\r\n    const data = {\r\n      pk: detail.pk,\r\n      contact: detail.contact,\r\n      process_status: process_status\r\n    }\r\n\r\n    reservAPI.updReservStatus(data, ({ status }) => {\r\n      if (status === 200) {\r\n        const find = list.find(item => item.pk === detail.pk)\r\n        reservDispatch({ type: 'SPLICE_ITEM', index: list.indexOf(find) })\r\n\r\n        if (process_status === RESERV_STATUS_CODE.CALLED) {\r\n          find.process_status = data.process_status\r\n          reservDispatch({ type: 'UNSHIFT_ITEM', data: find })\r\n        } else {\r\n          reservDispatch({ type: 'SET_DETAIL', data: null })\r\n          reservDispatch({ type: 'SET_TOTAL', data: list.length })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"btn-container\">\r\n      <button className=\"btn reserv-btn\" onClick={handleCancelMenu}>취소</button>\r\n      <button className=\"btn reserv-btn\"\r\n        onClick={() => { handleStatus(RESERV_STATUS_CODE.CONFIRMED) }}>\r\n        착석\r\n      </button>\r\n      {\r\n        rstrnt.state > 0 &&\r\n        <button className=\"btn reserv-btn\"\r\n          onClick={() => { handleStatus(RESERV_STATUS_CODE.CALLED) }}>\r\n          호출\r\n        </button>\r\n      }\r\n      <ul className=\"cancel-menu\" ref={dropdownMenu}>\r\n        <li onClick={() => { handleStatus(RESERV_STATUS_CODE.CANCELED_CUSTOMER) }}>고객사정</li>\r\n        <li onClick={() => { handleStatus(RESERV_STATUS_CODE.CANCELED_RSTRNT) }}>가게사정</li>\r\n        <li onClick={() => { handleStatus(RESERV_STATUS_CODE.CALCELED_SOLDOUT) }}>재료소진</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default BtnContainer","import { useEffect, useState } from \"react\"\r\n\r\nimport ReservItem from \"./ReservItem\";\r\n\r\nimport { reservAPI } from \"../utils/api\";\r\nimport { reservContext, useReservReducer } from \"../context/reservContext\";\r\nimport BtnContainer from \"./BtnContainer\";\r\n\r\nexport default function Dashboard() {\r\n\r\n  const [reserv, reservDispatch] = useReservReducer()\r\n\r\n  useEffect(() => {\r\n    reservAPI.getList(({ status, data }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return reservDispatch({ type: 'SET_LIST', data: data })\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <reservContext.Provider value={{ reserv: reserv, reservDispatch: reservDispatch }}>\r\n      <section className=\"content content-open\">\r\n        <div className=\"list\">\r\n          {\r\n            reserv.list.map(item => (\r\n              <ReservItem key={item.pk} data={item} />\r\n            ))\r\n          }\r\n        </div>\r\n        <div className=\"info\">\r\n          <div className=\"realtime-total card card-circle\">\r\n            <p>현재 대기 팀 수</p>\r\n            <strong>{reserv.list.length}</strong>\r\n            <p>팀</p>\r\n          </div>\r\n          {\r\n            reserv.detail ?\r\n              <>\r\n                <div className=\"detail card\">\r\n                  <p className=\"detail-no\">\r\n                    #{reserv.detail.seq < 10 ? `0${reserv.detail.seq}` : reserv.detail.seq}\r\n                  </p>\r\n                  <p className=\"detail-headcount\">\r\n                    {reserv.detail.headcount < 10 ? `0${reserv.detail.headcount}` : reserv.detail.headcount} 명\r\n                  </p>\r\n                  <p className=\"detail-contact\">{reserv.detail.contact}</p>\r\n                  <p className=\"detail-regtime\">등록 시간 | {reserv.detail.regdate}</p>\r\n                  <p className=\"detail-waittime\">대기 시간 | {reserv.detail.waittime} 분</p>\r\n                </div>\r\n                <BtnContainer />\r\n              </> :\r\n              <div className=\"detail card\">\r\n                <p>선택 된 아이템이 없습니다.</p>\r\n              </div>\r\n          }\r\n        </div>\r\n      </section>\r\n    </reservContext.Provider>\r\n  )\r\n}","import { memo, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport CallRoundedIcon from \"@material-ui/icons/CallRounded\"\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\"\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\"\r\nimport RestaurantMenuRoundedIcon from \"@material-ui/icons/RestaurantMenuRounded\"\r\nimport AlternateEmailRoundedIcon from \"@material-ui/icons/AlternateEmailRounded\"\r\n\r\nimport { rstrntAPI, ownerAPI } from \"../utils/api\"\r\nimport { rstrntContext } from \"../context/rstrntContext\"\r\n\r\nconst Setting = memo(() => {\r\n  return (\r\n    <section className=\"content content-setting\">\r\n      <div className=\"inner\">\r\n        <RstrntInfo />\r\n        <OwnerInfo />\r\n        <p className=\"small_link\">기본 정보가 변경되었나요? <Link to=\"\">정보수정 요청</Link></p>\r\n      </div>\r\n    </section>\r\n  )\r\n})\r\n\r\nconst RstrntInfo = memo(() => {\r\n\r\n  const { rstrnt, rstrntDispatch } = useContext(rstrntContext)\r\n\r\n  const fileHandle = useCallback((e) => {\r\n    const formData = new FormData()\r\n    formData.append('file', e.target.files[0])\r\n\r\n    rstrntAPI.updRstrnt(formData, ({ status, data }) => {\r\n      switch(status) {\r\n        case 200:\r\n          return rstrntDispatch({ type: 'SET_PROFILE_IMG', data: data.profile_img })\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const moreInfoSubmit = useCallback((e) => {\r\n    e.preventDefault()\r\n    rstrntAPI.updRstrnt(new FormData(e.target), ({ status, data }) => {\r\n      switch(status) {\r\n        case 200:\r\n          return rstrntDispatch({ type: 'SET_MORE_INFO', data: data.more_info })\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"rstrnt-info\">\r\n      <h2>Restaurant Information</h2>\r\n      <form className=\"profile-form\">\r\n        <div className=\"card card-circle\">\r\n          <img src={`/resources/img/rstrnt/${rstrnt.pk}/${rstrnt.profile_img}`} alt=\"profile\" />\r\n        </div>\r\n        <input type=\"file\" id=\"file\" name=\"file\" accept=\"image/*\" onChange={fileHandle} />\r\n        <label htmlFor=\"file\" className=\"btn btn-round\">사진 수정</label>\r\n      </form>\r\n      <div className=\"static-info\">\r\n        <p><RestaurantMenuRoundedIcon />{rstrnt.nm}</p>\r\n        <p><CallRoundedIcon />{rstrnt.contact}</p>\r\n        <p><LocationOnRoundedIcon />{rstrnt.location}</p>\r\n      </div>\r\n      <form className=\"more-info-form\" onSubmit={moreInfoSubmit} encType=\"multipart/form-data\">\r\n        <textarea name=\"more_info\" placeholder=\"소개글을 입력해주세요\"\r\n          value={rstrnt.more_info} onChange={(e) => rstrntDispatch({ type: 'SET_MORE_INFO', data: e.target.value })} />\r\n        <button>소개글 등록</button>\r\n      </form>\r\n    </div>\r\n  )\r\n})\r\n\r\nfunction useOwner() {\r\n  const [value, setValue] = useState({})\r\n\r\n  useEffect(() => {\r\n    ownerAPI.getOwner(({ status, data }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return setValue(data)\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return value\r\n}\r\n\r\nconst OwnerInfo = memo(() => {\r\n  const ownerInfo = useOwner()\r\n\r\n  return (\r\n    <div className=\"owner-info\">\r\n      <h2>Owner Information</h2>\r\n      <div className=\"top\">\r\n        <div className=\"static-info\">\r\n          <p><PersonRoundedIcon />{ownerInfo.nm}</p>\r\n          <p><CallRoundedIcon />{ownerInfo.contact}</p>\r\n          <p><AlternateEmailRoundedIcon />{ownerInfo.email}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Setting","import { memo, useEffect, useMemo } from \"react\"\r\nimport { Route, Switch, useHistory } from \"react-router\"\r\n\r\nimport { rstrntAPI } from \"../utils/api\"\r\nimport { asideContext, useAsideReducer } from \"../context/asideContext\"\r\nimport { rstrntContext, useRstrntReducer } from \"../context/rstrntContext\"\r\n\r\nimport Header from './Header'\r\nimport Aside from './Aside'\r\nimport Dashboard from './Dashboard'\r\nimport Setting from './Setting'\r\n\r\nexport default function Main() {\r\n\r\n  const history = useHistory()\r\n\r\n  const [aside, asideDispatch] = useAsideReducer()\r\n  const [rstrnt, rstrntDispatch] = useRstrntReducer()\r\n\r\n  const locked = useMemo(() => (\r\n    aside.locked ? 'flex-row' : ''\r\n  ), [aside.locked])\r\n\r\n  useEffect(() => {\r\n    rstrntAPI.getRstrntInfo(({ status, data }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return rstrntDispatch({type: 'SET_DATA', data: data})\r\n        case 401:\r\n          return history.push('/owner/login')\r\n        case 403:\r\n          return history.push('/owner/initial-setting')\r\n      }\r\n    })\r\n  }, [])\r\n  \r\n  return (\r\n    <rstrntContext.Provider value={{ rstrnt: rstrnt, rstrntDispatch: rstrntDispatch }}>\r\n      <asideContext.Provider value={{ aside: aside, asideDispatch: asideDispatch }}>\r\n        <Header />\r\n        <main id=\"main\" className={locked}>\r\n          <Aside />\r\n          <Switch>\r\n            <Route exact path=\"/owner/main\">\r\n              {\r\n                rstrnt.state < 0 ?\r\n                  <Close /> :\r\n                  <Dashboard />\r\n              }\r\n            </Route>\r\n            <Route path=\"/owner/main/setting\" component={Setting} />\r\n          </Switch>\r\n        </main>\r\n      </asideContext.Provider>\r\n    </rstrntContext.Provider>\r\n  )\r\n}\r\n\r\nconst Close = memo(() => {\r\n  return (\r\n    <section className=\"content content-close\">\r\n      <p>지금은 <strong className=\"state-label close\">Close</strong> 상태입니다.</p>\r\n      <p>Dashboard는 <strong className=\"state-label open\">Open</strong> 후에 사용 가능합니다.</p>\r\n    </section>\r\n  )\r\n})","import { useHistory } from \"react-router\"\r\n\r\nimport { ownerAPI } from \"../utils/api\"\r\nimport { useEmailInput, usePasswordInput } from \"../utils/form\"\r\n\r\nexport default function LoginForm({ setErrMessage }) {\r\n  \r\n  const history = useHistory()\r\n\r\n  const email = useEmailInput()\r\n  const pw = usePasswordInput()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      email: email.value,\r\n      pw: pw.value\r\n    }\r\n\r\n    ownerAPI.login(data, ({ status, message }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return history.push(`/owner/main`)\r\n        default:\r\n          return setErrMessage(message)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        {...email}\r\n        required\r\n        placeholder=\"이메일\"\r\n      />\r\n      <input\r\n        {...pw}\r\n        required\r\n        placeholder=\"비밀번호\"\r\n      />\r\n      <button className=\"btn\">로그인</button>\r\n    </form>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport LoginForm from \"./LoginForm\"\r\n\r\nexport default function Login() {\r\n\r\n  const [errMessage, setErrMessage] = useState('')\r\n\r\n  return (\r\n    <main id=\"main\">\r\n      <section className=\"content content-login flex-column\">\r\n        <h2 className=\"content-title\">사장님으로 로그인</h2>\r\n        <p className=\"err-message\">{errMessage}</p>\r\n        <LoginForm setErrMessage={setErrMessage} />\r\n        <p className=\"small_link\">\r\n          아직 가게 등록을 하지 않으셨나요?\r\n          <Link className=\"link\" to=\"/home/application\" target=\"_blank\">가게등록</Link>\r\n        </p>\r\n      </section>\r\n    </main>\r\n  )\r\n}","import { useCallback, useEffect, useRef, useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nimport { rstrntAPI } from \"../utils/api\"\r\nimport { setPreview } from \"../utils/preview\"\r\n\r\nexport default function InitialSetting() {\r\n  const history = useHistory()\r\n  const container = useRef()\r\n  const [data, setData] = useState(null)\r\n  const [formFields, setFormFields] = useState({\r\n    file: '',\r\n    location: '',\r\n    contact: '',\r\n    more_info: '',\r\n    reset_pw: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    rstrntAPI.getInitialInfo(({status, data}) => {\r\n      if(status === 200) setData(data)\r\n    })\r\n  }, [])\r\n\r\n  const onSubmit = useCallback((e) => {\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData(e.target)\r\n    formData.append('pk', data.pk)\r\n    formData.append('owner_pk', data.owner_pk)\r\n\r\n    rstrntAPI.initialSetting(formData, ({status}) => {\r\n      if(status === 200) history.push(\"/owner\")\r\n    })\r\n  })\r\n\r\n  const fieldHandle = useCallback(({target}) => {\r\n    if (target.name === 'file') {\r\n      setPreview(container.current, target.files[0])\r\n    }\r\n    setFormFields({...formFields, [target.name]: target.value})\r\n  })\r\n\r\n  return (\r\n    <main id=\"main\">\r\n      <section className=\"content content-initial flex-column\">\r\n        <h2 className=\"content-title\">Welcome to {data && data.nm}!</h2>\r\n        <small>서비스 시작 전 초기 설정이 필요합니다.</small>\r\n        <form onSubmit={onSubmit}>\r\n          <div ref={container} className=\"card card-circle\"></div>\r\n          \r\n          <input type=\"file\" name=\"file\" accept=\"image/*\" required\r\n            value={formFields.file} onChange={fieldHandle} />\r\n          \r\n          <input type=\"text\" name=\"location\" required placeholder=\"매장 주소\"\r\n            value={formFields.location} onChange={fieldHandle}/>\r\n          \r\n          <input type=\"tel\" name=\"contact\" required placeholder=\"매장 전화번호\"\r\n            value={formFields.contact} onChange={fieldHandle}/>\r\n          \r\n          <textarea name=\"more_info\" placeholder=\"기타 매장 정보\"\r\n            value={formFields.more_info} onChange={fieldHandle}/>\r\n          \r\n          <input type=\"password\" name=\"reset_pw\" required placeholder=\"새 비밀번호\"\r\n             value={formFields.reset_pw} onChange={fieldHandle}/>\r\n\r\n          <button className=\"btn\">시작하기</button>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  )\r\n}","export function setPreview(container, file) {\r\n\tlet img = container.querySelector('img')\r\n\t\r\n\tif (!img) {\r\n\t\timg = document.createElement('img')\r\n\t\tcontainer.appendChild(img)\r\n\t}\r\n\t\r\n\tif(file.constructor === File) {\r\n\t\timg.src = URL.createObjectURL(file)\t\r\n\t} else {\r\n\t\timg.src = file\r\n\t}\r\n}\r\n\r\nexport function removePreview(container) {\r\n\tconst img = container.querySelector('img')\r\n\tif(img) {\r\n\t\tcontainer.removeChild(img)\r\n\t}\r\n}","import { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\"\r\n\r\nimport Main from \"./comp-owner/Main\"\r\nimport Login from \"./comp-owner/Login\"\r\nimport InitialSetting from \"./comp-owner/InitialSetting\"\r\n\r\nexport default function Owner() {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <div id=\"owner-app\" className=\"flex-column\">\r\n      <Switch>\r\n        <Route exact path=\"/owner\">\r\n          <Redirect to=\"/owner/main\" />\r\n        </Route>\r\n        <Route path={`${path}/login`} component={Login} />\r\n        <Route path={`${path}/initial-setting`} component={InitialSetting} />\r\n        <Route path={`${path}/main`} component={Main} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}","import { useContext, useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nimport RestaurantMenuRoundedIcon from \"@material-ui/icons/RestaurantMenuRounded\"\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\"\r\nimport CallRoundedIcon from \"@material-ui/icons/CallRounded\"\r\n\r\nimport { rstrntAPI, useCities } from \"../utils/api\"\r\nimport { pagenameContext } from \"./Main\"\r\n\r\nexport default function List() {\r\n  const { setPagename } = useContext(pagenameContext)\r\n  const cities = useCities()\r\n  const [list, setList] = useState([])\r\n\r\n  const [search, setSearch] = useState({\r\n    nm: '',\r\n    city_pk: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    setPagename('가게 찾기')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    rstrntAPI.getRstrntAll(search, ({ status, data }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return setList(data)\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [search])\r\n\r\n  const handleChange = (e) => {\r\n    setSearch({ ...search, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search-form flex-row\">\r\n        <input\r\n          name=\"nm\"\r\n          placeholder=\"가게명\"\r\n          value={search.nm}\r\n          onChange={handleChange}\r\n        />\r\n        <select name=\"city_pk\" value={search.city_pk} onChange={handleChange}>\r\n          <option>지역</option>\r\n          {\r\n            cities.map(({ pk, nm }) => (\r\n              <option key={pk} value={pk}>{nm}</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </div>\r\n\r\n      <section className=\"content content-list\">\r\n        <ul className=\"list\">\r\n          {\r\n            list.map(rstrnt => (\r\n              <Item key={rstrnt.pk} data={rstrnt} />\r\n            ))\r\n          }\r\n        </ul>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Item({ data }) {\r\n  \r\n  const history = useHistory()\r\n\r\n  const { pk, profile_img, nm, location, contact } = data\r\n\r\n  const onClick = () => {\r\n    history.push(`/customer/restaurants/${pk}`)\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-item\" onClick={onClick}>\r\n      <img src={`/resources/img/rstrnt/${pk}/${profile_img}`} alt={`${nm} - profile image`} />\r\n      <div className=\"info\">\r\n        <strong><RestaurantMenuRoundedIcon />{nm}</strong>\r\n        <p><LocationOnRoundedIcon />{location}</p>\r\n        <p><CallRoundedIcon />{contact}</p>\r\n      </div>\r\n    </li>\r\n  )\r\n}","import { useCallback, useContext, useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router\"\r\n\r\nimport { rstrntAPI, reservAPI } from \"../utils/api\"\r\nimport { pagenameContext } from \"./Main\"\r\n\r\nexport default function Reserv() {\r\n  const { setPagename } = useContext(pagenameContext)\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const [data, setData] = useState({})\r\n  const [formData, setFormData] = useState({\r\n    headcount: 0,\r\n    contact: '',\r\n    confirm: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    setPagename('예약하기')\r\n    rstrntAPI.getRstrnt(id, ({ status, data }) => {\r\n      if (status === 200) {\r\n        setData(data)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    reservAPI.reservation(\r\n      { ...formData, rstrnt_pk: data.pk },\r\n      ({ status, data: pk }) => {\r\n        if (status === 200) {\r\n          return history.push(`/customer/result/${pk}`)\r\n        }\r\n        window.alert(\r\n          `입력하신 연락처로 예약된 식당이 이미 존재합니다.`\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  const inputHandle = useCallback((e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  })\r\n\r\n  return (\r\n    <section className=\"content content-reserv\">\r\n      <div className=\"info\">\r\n        <div className=\"card card-circle profile-img\">\r\n          {\r\n            data.profile_img &&\r\n            <img src={`/resources/img/rstrnt/${data.pk}/${data.profile_img}`} alt=\"profile\" />\r\n          }\r\n        </div>\r\n        <p><strong>{data.nm}</strong><span>에 예약합니다.</span></p>\r\n      </div>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"tel\" name=\"contact\" placeholder=\"연락처\" required\r\n          value={formData.contact} onChange={inputHandle} />\r\n        <select name=\"headcount\" required\r\n          onChange={inputHandle}>\r\n          <option value=\"\">인원수</option>\r\n          <option value=\"1\">1 명</option>\r\n          <option value=\"2\">2 명</option>\r\n          <option value=\"3\">3 명</option>\r\n          <option value=\"4\">4 명</option>\r\n          <option value=\"5\">5 명</option>\r\n        </select>\r\n        <label>\r\n          <input type=\"checkbox\" name=\"confirm\" required\r\n            onChange={inputHandle} />\r\n          정보 제공에 동의합니다.\r\n        </label>\r\n        <button className=\"btn\">예약하기</button>\r\n      </form>\r\n    </section>\r\n  )\r\n}","import { useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router\"\r\n\r\nimport { reservAPI } from \"../utils/api\"\r\n\r\nimport { pagenameContext } from \"./Main\"\r\n\r\nexport default function Result() {\r\n  const { setPagename } = useContext(pagenameContext)\r\n  const { id } = useParams()\r\n  const [data, setData] = useState({ rstrnt: {} })\r\n  useEffect(() => {\r\n    setPagename('예약 결과')\r\n\r\n    reservAPI.getResult(id, ({ status, data }) => {\r\n      if (status === 200) {\r\n        return setData(data)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <section className=\"content content-result\">\r\n        <div className=\"main-info\">\r\n          <p><strong className=\"rstrnt-nm\">{data.rstrnt.nm}</strong>에</p>\r\n          <p>대기번호 <strong className=\"reserv-no\">#{data.seq}</strong>번으로</p>\r\n          <p>예약 되었습니다.</p>\r\n          <small><i>🥎</i>변동사항 발생 시 매장으로 직접 연락 바랍니다.<i>🥎</i></small>\r\n        </div>\r\n        <h3>상세 정보</h3>\r\n        <div className=\"reserv-info\">\r\n          <p>연락처: {data.contact}</p>\r\n          <p>인원수: {data.headcount}명</p>\r\n          <p>대기번호: {data.seq}번</p>\r\n          <p>남은 대기 팀: {data.rstrnt.realtime_total}팀</p>\r\n        </div>\r\n        <div className=\"rstrnt-info\">\r\n          <p>가게명: {data.rstrnt.nm}</p>\r\n          <p>가게 연락처: {data.rstrnt.contact}</p>\r\n          <p>가게 주소: {data.rstrnt.location}</p>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\"\r\nimport { useParams, useRouteMatch } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport CommentIcon from \"@material-ui/icons/Comment\"\r\nimport CallRoundedIcon from \"@material-ui/icons/CallRounded\"\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\"\r\n\r\nimport { rstrntAPI } from \"../utils/api\"\r\nimport { pagenameContext } from \"./Main\"\r\n\r\nexport default function Detail() {\r\n  const { setPagename } = useContext(pagenameContext)\r\n  const { id } = useParams()\r\n  const { url } = useRouteMatch()\r\n\r\n  const [data, setData] = useState({})\r\n  const {\r\n    pk,\r\n    profile_img,\r\n    realtime_total,\r\n    nm,\r\n    location,\r\n    contact,\r\n    more_info\r\n  } = useMemo(() => data)\r\n\r\n  useEffect(() => {\r\n    setPagename('가게 정보')\r\n\r\n    rstrntAPI.getRstrnt(id, ({ status, data }) => {\r\n      if (status === 200) {\r\n        setData(data)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"content content-detail\">\r\n      <div className=\"card-container\">\r\n        <div className=\"card card-circle profile-img\">\r\n          {\r\n            profile_img &&\r\n            <img src={`/resources/img/rstrnt/${pk}/${profile_img}`} alt=\"profile\" />\r\n          }\r\n        </div>\r\n        <div className=\"card card-circle realtime-total\">\r\n          <p>대기 중</p>\r\n          <strong>{realtime_total}</strong>\r\n          <p>팀</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"info\">\r\n        <h2>{nm}</h2>\r\n        <p><LocationOnRoundedIcon/>{location}</p>\r\n        <p><CallRoundedIcon/>{contact}</p>\r\n        <p><CommentIcon/>{more_info}</p>\r\n      </div>\r\n      <Link className=\"btn\" to={`${url}/reserv`}>예약하기</Link>\r\n    </section>\r\n  )\r\n}","import { createContext, useContext, useState } from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\n\r\nimport logo from \"../logo.svg\"\r\n\r\nimport List from \"./Rstrnt\";\r\nimport Reserv from \"./Reserv\";\r\nimport Result from \"./ReservResult\";\r\nimport Detail from \"./RstrntDetail\";\r\n\r\nexport const pagenameContext = createContext({})\r\n\r\nexport function Main() {\r\n  const [pagename, setPagename] = useState('');\r\n  \r\n  return (\r\n    <pagenameContext.Provider value={{ pagename: pagename, setPagename: setPagename }}>\r\n      <Header pagename={pagename} />\r\n      <main id=\"main\">\r\n        <Switch>\r\n          <Route path=\"/customer/restaurants/:id/reserv\" component={Reserv} />\r\n          <Route path=\"/customer/restaurants/:id\" component={Detail} />\r\n          <Route path=\"/customer/restaurants\" component={List} />\r\n          <Route path=\"/customer/result/:id\" component={Result} />\r\n        </Switch>\r\n      </main>\r\n    </pagenameContext.Provider>\r\n  )\r\n}\r\n\r\nfunction Header() {\r\n  const { pagename } = useContext(pagenameContext)\r\n  return (\r\n    <header id=\"header\">\r\n      <h1><Link to=\"/customer\"><img src={logo} alt=\"logo\" /></Link></h1>\r\n      <h2>{pagename}</h2>\r\n    </header>\r\n  )\r\n}","import { Route, Switch, Link } from \"react-router-dom\"\r\n\r\nimport { Main } from \"./comp-customer/Main\"\r\n\r\nexport default function Customer() {\r\n  return (\r\n    <div id=\"customer-app\" className=\"flex-column\">\r\n      <Switch>\r\n        <Route exact path=\"/customer\" component={Index} />\r\n        <Route component={Main} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Index() {\r\n  return (\r\n    <main id=\"main\">\r\n      <section className=\"content content-visual\">\r\n        <div className=\"text\">\r\n          <small>I hate wait!</small>\r\n          <h1>H.ait</h1>\r\n          <p>이제,</p>\r\n          <p>안에서 편하게 기다리자</p>\r\n        </div>\r\n        <Link className=\"btn btn-round\" to={`/customer/restaurants`}>가게 찾기</Link>\r\n      </section>\r\n    </main>\r\n  )\r\n}","import { useHistory } from \"react-router\"\r\n\r\nimport { adminAPI } from \"../utils/api\"\r\nimport { useInput, usePasswordInput } from \"../utils/form\"\r\n\r\nexport default function Login() {\r\n\r\n  const history = useHistory()\r\n\r\n  const id = useInput()\r\n  const pw = usePasswordInput()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      id: id.value,\r\n      pw: pw.value\r\n    }\r\n    \r\n    adminAPI.login(data, ({status}) => {\r\n      switch (status) {\r\n        case 200:\r\n          return history.push('/admin')\r\n        default:\r\n          break\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <main id=\"main\">\r\n      <section className=\"content content-login flex-column\">\r\n        <h2 className=\"content-title\">관리자 로그인</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            {...id}\r\n            required\r\n            placeholder=\"아이디\" />\r\n          <input\r\n            {...pw}\r\n            required\r\n            placeholder=\"비밀번호\" />\r\n          <button>로그인</button>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  )\r\n}","import { useHistory } from \"react-router\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { adminAPI } from \"../utils/api\";\r\n\r\nimport logo from \"../logo.svg\"\r\n\r\nexport default function Header() {\r\n  const history = useHistory()\r\n\r\n  function handleLogout() {\r\n    adminAPI.logout((status) => {\r\n      switch(status) {\r\n        case 200:\r\n          return history.push('/admin/login')\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <header id=\"header\" className=\"flex-row\">\r\n      <Link to=\"/admin\" className=\"logo\">\r\n        <img src={logo} alt=\"h.ait logo\" />\r\n        <span>승인 신청 관리 페이지</span>\r\n      </Link>\r\n      <button onClick={handleLogout} className=\"btn btn-round\">로그아웃</button>\r\n    </header>\r\n  )\r\n}\r\n","import { useHistory } from \"react-router\"\r\n\r\nimport { APPLICATION_STATUS_CODE } from \"../utils/const\"\r\n\r\nexport default function ApplicationItem({ data }) {\r\n  const history = useHistory()\r\n\r\n  const handleClick = () => {\r\n    history.push(`/admin/applications/${data.pk}`)\r\n  }\r\n\r\n  return (\r\n    <tr onClick={handleClick} className=\"application-item\">\r\n      <td>{data.pk}</td>\r\n      <td>{data.owner_nm}</td>\r\n      <td>{data.owner_email}</td>\r\n      <td>{data.owner_contact}</td>\r\n      <td>{data.rstrnt_nm}</td>\r\n      <td>{data.city_nm}</td>\r\n      <td>{data.regdate}</td>\r\n      <td>\r\n        <span className={`status-label-small ${APPLICATION_STATUS_CODE[data.process_status]}`}>\r\n          {APPLICATION_STATUS_CODE[data.process_status]}\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nimport { applicationAPI } from \"../utils/api\"\r\nimport { APPLICATION_STATUS_CODE } from \"../utils/const\"\r\n\r\nimport ApplicationItem from \"./ApplicationItem\"\r\n\r\nexport default function ApplicationList() {\r\n\r\n  const [filter, setFilter] = useState(APPLICATION_STATUS_CODE.REQUESTED)\r\n  const list = useApplicationList(filter)\r\n\r\n  const onChange = (e) => {\r\n    setFilter(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <section className=\"content content-list\">\r\n      <div className=\"content-header flex-row\">\r\n        <h2>승인 신청 목록</h2>\r\n        <select onChange={onChange} className=\"filter-list\">\r\n          <option value={APPLICATION_STATUS_CODE.REQUESTED}>대기 중</option>\r\n          <option value={APPLICATION_STATUS_CODE.CONFIRMED}>승인 완료</option>\r\n          <option value={APPLICATION_STATUS_CODE.CANCELED}>승인 취소</option>\r\n        </select>\r\n      </div>\r\n      <table className=\"application-list\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"pk\">번호</th>\r\n            <th className=\"owner-nm\">신청인</th>\r\n            <th className=\"owner-email\">이메일</th>\r\n            <th className=\"owner-contact\">연락처</th>\r\n            <th className=\"rstrnt-nm\">가게명</th>\r\n            <th className=\"city\">지역</th>\r\n            <th className=\"regdate\">신청일</th>\r\n            <th className=\"status\">처리상태</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            list.map(data => (\r\n              <ApplicationItem key={data.pk} data={data} />\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction useApplicationList(filter) {\r\n  const history = useHistory()\r\n  const [value, setValue] = useState([])\r\n\r\n  useEffect(() => {\r\n    applicationAPI.getList(filter, ({ status, data }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return setValue(data)\r\n        case 401:\r\n        case 403:\r\n          return history.replace('/admin/login')\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [filter])\r\n\r\n  return value\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router\"\r\n\r\nimport { applicationAPI } from \"../utils/api\"\r\nimport { APPLICATION_STATUS_CODE } from \"../utils/const\"\r\n\r\n\r\nexport default function ApplicationDetail() {\r\n\r\n  const { pk } = useParams()\r\n  const application = useApplication(pk)\r\n\r\n  const onClick = (e) => {\r\n    const { code: process_status } = e.target.dataset\r\n    const data = {\r\n      ...application,\r\n      process_status: process_status\r\n    }\r\n\r\n    applicationAPI.updateApplication(data, ({ status }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return window.location.reload()\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className=\"content content-detail\">\r\n      <div className=\"content-header flex-row\">\r\n        <h2>승인 신청서</h2>\r\n        {\r\n          (application.process_status === 0) &&\r\n          <div className=\"mailsender\">\r\n            <button onClick={onClick} data-code={APPLICATION_STATUS_CODE.CANCELED} className=\"btn\">거부</button>\r\n            <button onClick={onClick} data-code={APPLICATION_STATUS_CODE.CONFIRMED} className=\"btn\">승인</button>\r\n          </div>\r\n        }\r\n      </div>\r\n      <article>\r\n        <div>\r\n          <span>처리상태</span>\r\n          <span className={`status-label ${APPLICATION_STATUS_CODE[application.process_status]}`}>{APPLICATION_STATUS_CODE[application.process_status]}</span>\r\n        </div>\r\n        <div><span>번호</span><span>{application.pk}</span></div>\r\n        <div><span>신청인</span><span>{application.owner_nm}</span></div>\r\n        <div><span>이메일</span><span>{application.owner_email}</span></div>\r\n        <div><span>연락처</span><span>{application.owner_contact}</span></div>\r\n        <div><span>가게명</span><span>{application.rstrnt_nm}</span></div>\r\n        <div><span>지역</span><span>{application.city_nm}</span></div>\r\n        <div><span>신청일</span><span>{application.regdate}</span></div>\r\n        <div>\r\n          <span>기타 신청사항</span>\r\n          <p>{application.more_info}</p>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction useApplication(pk) {\r\n  const history = useHistory()\r\n  const [value, setValue] = useState({})\r\n\r\n  useEffect(() => {\r\n    applicationAPI.getApplication(pk, ({ status, data }) => {\r\n      switch (status) {\r\n        case 200:\r\n          return setValue(data)\r\n        case 401:\r\n        case 403:\r\n          return history.replace('/admin/login')\r\n        default:\r\n          return\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return value\r\n}","import { Redirect, Route, Switch } from \"react-router\"\r\n\r\nimport Login from \"./comp-admin/Login\"\r\nimport Header from \"./comp-admin/Header\"\r\nimport ApplicationList from \"./comp-admin/ApplicationList\"\r\nimport ApplicationDetail from \"./comp-admin/ApplicationDetail\"\r\n\r\nexport default function Admin() {\r\n  return (\r\n    <div id=\"admin-app\" className=\"flex-column\">\r\n      <Route exact path=\"/admin\">\r\n        <Redirect to=\"/admin/applications\" />\r\n      </Route>\r\n      <Switch>\r\n        <Route path=\"/admin/login\" component={Login} />\r\n        <Route component={Main} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <Switch>\r\n          <Route path=\"/admin/applications/:pk\" component={ApplicationDetail} />\r\n          <Route path=\"/admin/applications\" component={ApplicationList} />\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  )\r\n}","import { Redirect, Route, Switch } from 'react-router'\r\n\r\nimport Home from './Home'\r\nimport Owner from './Owner'\r\nimport Customer from './Customer'\r\nimport Admin from './Admin'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/home\"/>\r\n      </Route>\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home}/>\r\n        <Route path=\"/owner\" component={Owner}/>\r\n        <Route path=\"/customer\" component={Customer}/>\r\n        <Route path=\"/admin\" component={Admin}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\n\r\nimport './css/index.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}